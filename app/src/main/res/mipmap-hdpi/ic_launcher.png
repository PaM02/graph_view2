package com.example.linkonprojet.activities;

import android.annotation.SuppressLint;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;

import android.content.pm.ActivityInfo;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import com.example.linkonprojet.utilities.MyReceiver;
import com.example.linkonprojet.R;
import com.example.linkonprojet.utilities.SaveLoad;
import com.example.linkonprojet.utilities.SessionManager;


public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    //je declare les variables
    MyReceiver myReceiver;
    Button buttonLogOut,buttonRe,buttonAchat,buttonSolde,buttonCons;
    Toast toast;
    private long backPressedTime;
    SessionManager sessionManager;
    SaveLoad saveLoad;

    @SuppressLint("SourceLockedOrientationActivity")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //desactivé l'ecran de l'orientation
        this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);

        //network connection
        myReceiver = new MyReceiver();
        IntentFilter intentFilter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);
        myReceiver = new MyReceiver();
        registerReceiver(myReceiver,intentFilter);

        //je récupére les vues
        buttonLogOut = findViewById(R.id.buttonLogOut);
        buttonRe = findViewById(R.id.buttonRe);
        buttonAchat = findViewById(R.id.buttonAchat);
        buttonSolde = findViewById(R.id.buttonSolde);
        buttonCons = findViewById(R.id.buttonCons);

        //je cree un objet de type Session manager
        sessionManager = new SessionManager(getApplicationContext());

        saveLoad = new SaveLoad(getApplicationContext());

        buttonLogOut.setOnClickListener(this);
        buttonRe.setOnClickListener(this);
        buttonAchat.setOnClickListener(this);
        buttonSolde.setOnClickListener(this);
        buttonCons.setOnClickListener(this);

        //charger les donnees que j'ai sauvegaré de la liste achat
        SaveLoad.loadData();

    }

    // la fonction du menu de toolbar
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.profil_menu, menu);
        return true;
    }

    //la fonction des elements du menu
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == R.id.item2) {

            //si l'element item2 est cliqué on ouvre l'activity profil
            Intent intent = new Intent(getApplicationContext(), Profil.class);
            startActivity(intent);
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onBackPressed() {

        //si la touche retour est cliqué
        if (backPressedTime + 2000 >System.currentTimeMillis()){
            toast.cancel();
            super.onBackPressed();
            return;
        }
        else {
            toast= Toast.makeText(getBaseContext